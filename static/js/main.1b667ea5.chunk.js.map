{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","error","setError","check","setCheck","searchMovie","setMovie","newMovie","Title","Plot","Poster","Math","random","toString","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","fetch","then","response","json","Response","App","data","setMovies","ReactDOM","render","document","getElementById"],"mappings":"8wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SCJ3BG,G,MAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAA0BC,mBAAS,IAAnC,mBAAOhB,EAAP,KAAciB,EAAd,KACA,EAA0BD,oBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAgCL,mBAAS,IAAzC,mBAAOM,EAAP,KAAoBC,EAApB,KAEMC,EAAW,CACfxB,MAAOsB,EAAYG,MACnBxB,YAAaqB,EAAYI,KACzBxB,OAAQoB,EAAYK,OACpBd,OAAQe,KAAKC,SAASC,WACtB3B,QAASyB,KAAKC,SAASC,YAazB,OACE,oCACE,0BAAM1B,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQ2B,QAAQ,eAAjC,eAIA,yBAAK3B,UAAU,WACb,2BACE4B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ9B,UAAS,gBAAWc,GAAS,aAC7BiB,MAAOnC,EACPoC,SAAU,SAACC,GACTpB,EAASoB,EAAMC,OAAOH,OACtBhB,GAAS,OAKdD,GACC,uBAAGd,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE4B,KAAK,SACL5B,UAAU,kBACVmC,QAAS,WA3CnBC,MAAM,8CAAD,OAA+CxC,IACjDyC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAC9B,GACLY,EAASZ,GACTQ,EAA4B,SAAnBR,EAAMiC,UACfvB,EAA4B,SAAnBV,EAAMiC,eAmCX,iBAWF,yBAAKxC,UAAU,WACb,4BACE4B,KAAK,SACL5B,UAAU,oBACVmC,QAAS,WACPlB,GAAS,GACTE,EAAS,IACTN,EAAS,IACLG,GACFL,EAASS,KARf,sBAkBoB,SAAzBF,EAAYsB,UACX,yBAAKxC,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcoB,O,OCzFZqB,EAAM,WACjB,MAA4B7B,mBAAS8B,GAArC,mBAAOrC,EAAP,KAAesC,EAAf,KAOA,OACE,yBAAK3C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAXA,SAAAJ,GAAK,OAAIoC,EAAU,GAAD,mBAC9BtC,GAD8B,CAEjCE,WCNJqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1b667ea5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n  const [check, setCheck] = useState(false);\n  const [searchMovie, setMovie] = useState({});\n\n  const newMovie = {\n    title: searchMovie.Title,\n    description: searchMovie.Plot,\n    imgUrl: searchMovie.Poster,\n    imdbId: Math.random().toString(),\n    imdbUrl: Math.random().toString(),\n  };\n\n  const request = () => {\n    fetch(`https://www.omdbapi.com/?apikey=87d355ce&t=${title}`)\n      .then(response => response.json())\n      .then((movie) => {\n        setMovie(movie);\n        setError(movie.Response !== 'True');\n        setCheck(movie.Response === 'True');\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${error && 'is-danger'}`}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                request();\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                setCheck(false);\n                setMovie({});\n                setTitle('');\n                if (check) {\n                  addMovie(newMovie);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {searchMovie.Response === 'True' && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = movie => setMovies([\n    ...movies,\n    movie,\n  ]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}